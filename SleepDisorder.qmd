---
title: "Sleep Disorder"
format: html
---

## Sleep Health and Lifestyle Analysis Project

By:

1.  Amabel Nabila (455854)

    -   Data Visualization and Analysis

2.  Mustafa Ceyhun Vural (455158)

    -   Machine Learning

3.  Onur Durmus (455860)

    -   Machine Learning

4.  Zehra Usta (455847)

    -   Machine Learning, Data Visualization and Analysis

## Project Objective

This project serves as the final assignment for the Reproducible Research course. It utilizes a dataset sourced from Kaggle and involves translating the code from Python to R. The aim of this project is to analyze the sleep health of individuals based on their respective lifestyles, incorporating machine learning techniques to enhance the analysis. Variables in this project include:

-   Gender

-   Age

-   Occupation

-   Sleep Duration

-   Quality of Sleep

-   Physical Activity Level

-   Stress Level

-   BMI Category

-   Blood Pressure

-   Heart Rate

-   Daily Steps

-   Sleep Disorder

## Introduction

Sleep disorders (or sleep-wake disorders) are difficulties with the quality, timing, and quantity of sleep that cause daily discomfort and impairment in functioning. Sleep-wake disturbances are frequently associated with physical or mental health illnesses such as depression, anxiety, or cognitive difficulties. There are various forms of sleep-wake disorders, with insomnia being the most frequent. Other sleep-wake problems include sleep apnea. Insomnia is a common sleep problem that makes it difficult to get asleep and remain asleep. Meanwhile, sleep apnea is a condition in which you stop breathing while asleep.

## Library

```{r}
# Libraries used
library(dplyr)
library(tidyr)
library(ggplot2)
library(patchwork)
library(corrplot)
library(ggExtra)
library(gbm)
library(caret)
library(caTools)  
library(stats) 
library(GGally)
library(neuralnet)
library(Metrics)
```



## Data

```{r}
# Read the data
data <- read.csv('Sleep_health_and_lifestyle_dataset.csv')
```

## Data Cleaning

```{r}
# Drop NA 
data <- na.omit(data)

# Standardize "Normal Weight" and "normal" to "Normal" in "BMI Category"

data <- data %>%
  mutate(BMI.Category = ifelse(BMI.Category %in% c("Normal Weight", "normal"), "Normal", BMI.Category))

# Cleaned data
head(data)
```

```{r}
# Split the Blood.Pressure column into two new columns and convert to numeric

data <- data %>%
  separate(col = Blood.Pressure, into = c("Systolic Pressure", "Diastolic Pressure"), sep = "/", convert = TRUE) %>%
  mutate(`Systolic Pressure` = as.numeric(`Systolic Pressure`),
         `Diastolic Pressure` = as.numeric(`Diastolic Pressure`))

str(data)
```
```{r}

summary(data)

```

```{r}
# Function for categorizing blood pressure
categorize_blood_pressure <- function(systolic, diastolic) {
  if (is.na(systolic) | is.na(diastolic)) {
    return(NA)
  } else if (systolic < 120 & diastolic < 80) {
    return('Optimal')
  } else if (systolic <= 139 | diastolic <= 89) {
    return('Normal')
  } else if (systolic >= 140 | diastolic >= 90) {
    return('Hypertension')
  } else {
    return('Other')
  }
}


data <- data %>%
  rowwise() %>%
  mutate(`Blood.Pressure.Category` = categorize_blood_pressure(`Systolic Pressure`, `Diastolic Pressure`))

head(data)
```
## Data Visualization

```{r}
age_groups <- data %>%
  mutate(Age.Group = case_when(
    Age <= 35 ~ "35 and below",
    Age > 35 ~ "35 and above"
  ))

ggplot(age_groups, aes(x = Age.Group, y = Sleep.Duration, fill = Age.Group)) +
  geom_bar(stat = "summary", fun = "mean") +
  labs(title = "Mean Sleep Duration by Age Group", x = "Age Group", y = "Mean Sleep Duration (hours)") +
  theme_minimal()

ggplot(age_groups, aes(x = Age.Group, y = Quality.of.Sleep, fill = Age.Group)) +
  geom_bar(stat = "summary", fun = "mean") +
  labs(title = "Mean Quality of Sleep by Age Group", x = "Age Group", y = "Mean Quality of Sleep") +
  theme_minimal()

ggplot(age_groups, aes(x = Age.Group, y = Physical.Activity.Level, fill = Age.Group)) +
  geom_bar(stat = "summary", fun = "mean") +
  labs(title = "Mean Physical Activity Level by Age Group", x = "Age Group", y = "Mean Physical Activity Level") +
  theme_minimal()

ggplot(age_groups, aes(x = Age.Group, y = Stress.Level, fill = Age.Group)) +
  geom_bar(stat = "summary", fun = "mean") +
  labs(title = "Mean Stress Level by Age Group", x = "Age Group", y = "Mean Stress Level") +
  theme_minimal()


```


```{r}
ggplot(data, aes(x = Stress.Level)) +
  geom_density(fill = "lightblue", alpha = 0.5) +
  labs(title = "Density Plot of Stress Level", x = "Stress Level", y = "Density") +
  theme_minimal()

ggplot(data, aes(x = Physical.Activity.Level)) +
  geom_density(fill = "lightblue", alpha = 0.5) +
  labs(title = "Density Plot of Stress Level", x = "Stress Level", y = "Density") +
  theme_minimal()

ggplot(data, aes(x = Sleep.Duration)) +
  geom_density(fill = "lightblue", alpha = 0.5) +
  labs(title = "Density Plot of Stress Level", x = "Stress Level", y = "Density") +
  theme_minimal()

```




```{r}
# Calculate mean, median, and mode
mean_sleep <- mean(data$Quality.of.Sleep, na.rm = TRUE)
median_sleep <- median(data$Quality.of.Sleep, na.rm = TRUE)
mode_sleep <- as.numeric(names(sort(table(data$Quality.of.Sleep), decreasing = TRUE)[1]))

# Create the histogram and add lines for mean, median, and mode
quality_of_sleep_plot <- ggplot(data, aes(x = Quality.of.Sleep)) +
  geom_histogram(aes(y = ..count..), binwidth = 1, fill = "lightblue", color = "black") +
  geom_vline(aes(xintercept = mean_sleep, color = "Mean"), linetype = "dashed", linewidth = 1) +
  geom_vline(aes(xintercept = median_sleep, color = "Median"), linetype = "dotted", linewidth = 1) +
  geom_vline(aes(xintercept = mode_sleep, color = "Mode"), linetype = "dotdash", linewidth = 1) +
  scale_color_manual(name = "Statistics", values = c("Mean" = "red", "Median" = "green", "Mode" = "blue")) +
  labs(title = "Quality of Sleep Distribution", x = "Quality of Sleep", y = "Count") +
  theme_minimal() +
  theme(
    legend.position = "right",
    plot.title = element_text(hjust = 0.5),
    axis.title.x = element_text(vjust = -0.2),
    axis.title.y = element_text(vjust = 1.2)
  )

# Print the plot
print(quality_of_sleep_plot)
```

The majority of participants reported excellent quality of sleep (average scores of 7 and 8). The fact that the mode is higher than both the mean and the median indicates that, while some people may have poor sleep quality, this group is more likely to have good sleep.\

```{r}
# Column names
quality_of_sleep_col <- "Quality.of.Sleep"
grouping_cols <- c("Gender", "Occupation", "BMI.Category", "Blood.Pressure.Category", "Sleep.Disorder")

plots <- list()


for(grouping_col in grouping_cols) {
  # Check if each group has at least two data points
  valid_groups <- data %>%
    group_by(!!sym(grouping_col)) %>%
    filter(n() > 1) %>%
    pull(!!sym(grouping_col)) %>%
    unique()
  
  # Create the density plot only for valid groups
  if (length(valid_groups) > 0) {
    p <- ggplot(data %>% filter(!!sym(grouping_col) %in% valid_groups), 
                aes_string(x = quality_of_sleep_col, fill = grouping_col)) +
      geom_density(alpha = 0.7) +
      theme_minimal() +
      labs(title = paste("Quality of Sleep by", grouping_col))
    plots[[grouping_col]] <- p
  } else {
    warning(paste("Not enough data to plot", grouping_col))
  }
}

# Check your list of plots
plots

# To display the plots
if (length(plots) > 0) {
  library(gridExtra)
  do.call(grid.arrange, c(plots, ncol = 2))
}
```

The investigation reveals that there are distinct patterns and variances in sleep quality based on gender, employment, BMI, blood pressure, and the prevalence of sleeping disorders. Lifestyle and health circumstances appear to have a substantial impact on sleep quality.\

```{r}
# Boxplot for Age by Gender
age_plot <- ggplot(data, aes(x = Gender, y = Age, fill = Gender)) +
  geom_boxplot() +
  labs(title = "1. How old are they?", y = "Age", x = "Gender") +
  theme_minimal()

# Boxplot for Sleep Duration by Gender
sleep_duration_plot <- ggplot(data, aes(x = Gender, y = `Sleep.Duration`, fill = Gender)) +
  geom_boxplot() +
  labs(title = "2. How long do they sleep?", y = "Sleep.Duration", x = "Gender") +
  theme_minimal()

# Boxplot for Quality of Sleep by Gender
quality_sleep_plot <- ggplot(data, aes(x = Gender, y = `Quality.of.Sleep`, fill = Gender)) +
  geom_boxplot() +
  labs(title = "3. How well do they sleep?", y = "Quality of Sleep", x = "Gender") +
  theme_minimal()

# Combine the plots into a single plot window
library(gridExtra)
grid.arrange(age_plot, sleep_duration_plot, quality_sleep_plot, ncol = 3)
```

**Age:**

The age boxplot suggests that, on average, women in this dataset are older than men, as indicated by the higher median line for women in the box. Comparable ranges for the top and bottom of the box and the interquartile range (IQR, the height of the box) point to similar age variability for both genders. There are men and females that are both younger and older than the core age categories, according to the whiskers, which depict the dispersion of the remaining data. However, the range for females is larger, indicating greater ages.

**Sleep Duration:**

The boxplot illustrates that men have a somewhat shorter median sleep time than women. The identical IQRs for the two genders suggest that the middle 50% of people have similar sleep duration distributions. Males appear to have a significantly larger distribution of sleep time than females, as indicated by the slightly greater range for males.

**Quality of Sleep:**

The median line suggests that when it comes to sleep quality, women appear to report a little greater median quality of sleep than men. For both genders, the dispersion of values (IQR) is comparable, though. Females tend to have a greater general range than males, suggesting that the quality of their sleep is more variable, with some reporting extremely good and some very low quality.

```{r}
# Count the number of participants in each occupation
occupation_count <- data %>%
  group_by(Occupation) %>%
  summarise(Participants = n_distinct(Person.ID))

# Calculate the average quality of sleep for each occupation
avg_quality_of_sleep <- data %>%
  group_by(Occupation) %>%
  summarise(AvgQualityOfSleep = mean(Quality.of.Sleep, na.rm = TRUE))

# Number of Participants by Occupation
occupation_count_plot <- ggplot(occupation_count, aes(x = reorder(Occupation, -Participants), y = Participants)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  coord_flip() +
  labs(title = "1. What are their occupations?", x = "Number of participants", y = "Occupation") +
  theme_minimal()

# Average Quality of Sleep by Occupation
quality_sleep_plot <- ggplot(avg_quality_of_sleep, aes(x = reorder(Occupation, AvgQualityOfSleep), y = AvgQualityOfSleep)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  coord_flip() +
  labs(title = "2. Who sleeps better, and who worse?", x = "Avg Quality of Sleep", y = "Occupation") +
  theme_minimal()

# Print the plots
print(occupation_count_plot)
print(quality_sleep_plot)
```

**Occupational Distribution**:

The distribution of participants among different vocations is seen in the first chart. The most common occupation is nursing, which is followed by engineering and medicine. In the sample, managers and sales reps are the least represented. This distribution may represent the true demographic composition of the pool from which participants were selected, or it may show the interest or availability of various occupations in taking part in the study.\

**Average Quality of Sleep by Occupation**:

The second graph displays the average sleep quality for various professions. Engineers seem to have the greatest average sleep quality, followed by accountants and attorneys. Conversely, scientists and sales people report the lowest average quality of sleep, which might be attributed to issues relating to their line of work or greater levels of stress related to their jobs. Despite the important importance of their work, doctors do not necessarily get better sleep than other professions, as seen by the fact that, despite their large representation in the dataset, their average sleep quality does not top the list.\

```{r}
# Count of participants by Sleep Disorder
sleep_disorder_count <- ggplot(data, aes(x = Sleep.Disorder)) +
  geom_bar(fill = "skyblue") +
  labs(title = "1. How many suffer from Sleep Disorders?", x = "Sleep Disorder", y = "Number of Participants") +
  theme_minimal()

# Average Quality of Sleep by Sleep Disorder
avg_sleep_quality_by_disorder <- ggplot(data, aes(x = Sleep.Disorder, y = Quality.of.Sleep)) +
  geom_bar(stat = "summary", fun = "mean", fill = "skyblue") +
  labs(title = "2. Who sleeps better?", x = "Sleep Disorder", y = "Avg Sleep Quality") +
  theme_minimal()

# Sleep quality boxplot by Sleep Disorder
sleep_quality_boxplot <- ggplot(data, aes(x = Sleep.Disorder, y = Quality.of.Sleep)) +
  geom_boxplot(fill = "skyblue") +
  labs(title = "3. Sleep quality boxplot by Sleep Disorders", x = "Sleep.Disorder", y = "Sleep.Quality") +
  theme_minimal()

# Print the plots
print(sleep_disorder_count)
print(avg_sleep_quality_by_disorder)
print(sleep_quality_boxplot)
```



```{r}
# Select only the numeric columns from the data
numeric_data <- data[sapply(data, is.numeric)]

# Calculating the correlation matrix
cor_matrix <- cor(numeric_data, use = "complete.obs")

# Create the correlation heatmap
corrplot(cor_matrix, method = "color", type = "upper", 
         tl.col = "black", tl.srt = 45,
         diag = FALSE)  

```

-   The scale on the right represents the range of correlation coefficients from -1 to 1.

-   A coefficient near to 1 indicates a significant positive correlation, which means that when one variable grows, so does the other.

-   A coefficient around -1 indicates a significant negative correlation, implying that when one variable grows, the other tends to decrease.

-   A coefficient around zero indicates little or no linear association between the variables.

    Thus, "Age" and "Person.ID" exhibit a substantial negative connection, which is uncommon and may imply that "Person.ID" is quantitatively linked to age. However, an ID should not have any association with age unless it is arbitrarily assigned based on age. "Quality of Sleep" and "Physical Activity Level" show a significant positive link, implying that persons who engage in more physical exercise may have better sleep quality. "Stress Level" appears to have a modest positive connection with "Systolic Pressure" and "Diastolic Pressure," showing that more stress may be connected with greater blood pressure. "Daily Steps" has a substantial negative association with "Heart Rate," implying that those who take more daily steps may have a lower resting heart rate, which is an indication of excellent cardiovascular health.\

```{r}
# Scatter plot of Sleep Duration vs Quality of Sleep
plot1 <- ggplot(data, aes(x = Quality.of.Sleep, y = Sleep.Duration)) +
  geom_point() +
  geom_smooth(method = lm, se = TRUE) +
  labs(title = "Long Rest = Good Rest",
       x = "Quality of Sleep",
       y = "Sleep Duration (hours)")

# Scatter plot of Stress Level vs Quality of Sleep
plot2 <- ggplot(data, aes(x = Quality.of.Sleep, y = Stress.Level)) +
  geom_point() +
  geom_smooth(method = lm, se = TRUE) +
  labs(title = "More Stress = Bad Rest",
       x = "Quality of Sleep",
       y = "Stress Level")

plot1
plot2
```

**Long Rest = Good Rest**:

The first figure demonstrates a favorable relationship between sleep length and sleep quality. Sleep duration increases as sleep quality scores rise, implying that those who report higher sleep quality sleep for longer periods of time. The data points are densely packed around the trend line, particularly when sleep quality improves, demonstrating a significant correlation between these two factors.\

**More Stress = Bad Rest**:

The second figure demonstrates a negative link between stress and sleep quality. As stress levels rise, the quality of sleep declines, implying that increased stress is linked to decreased sleep quality. The trend line slopes lower across the plot, and the data points, albeit slightly dispersed, follow the downward trend, confirming the negative link between stress and sleep quality.\

```{r}
# Scatter plot of Physical Activity Level vs Sleep Quality
plot3 <- ggplot(data, aes(x = Quality.of.Sleep, y = Physical.Activity.Level)) +
  geom_point() +
  geom_smooth(method = lm, se = TRUE) +
  labs(title = "A: Sleep quality based on physical activity",
       x = "Sleep Quality",
       y = "Physical Activity Level (minutes)")

# Scatter plot of Age vs Sleep Duration
plot4 <- ggplot(data, aes(x = Age, y = Sleep.Duration)) +
  geom_point() +
  geom_smooth(method = lm, se = TRUE) +
  labs(title = "B: The older you get, the more you sleep",
       x = "Age",
       y = "Sleep Duration (hours)")

# Scatter plot of Heart Rate vs Sleep Duration
plot5 <- ggplot(data, aes(x = Heart.Rate, y = Sleep.Duration)) +
  geom_point() +
  geom_smooth(method = lm, se = TRUE) +
  labs(title = "C: Quickest Heartbeat, Fewest Sleep",
       x = "Heart Rate",
       y = "Sleep Duration (hours)")

# Scatter plot of Physical Activity vs Sleep Duration
plot6 <- ggplot(data, aes(x = Physical.Activity.Level, y = Sleep.Duration)) +
  geom_point() +
  geom_smooth(method = lm, se = TRUE) +
  labs(title = "D: Engaging in physical exercise can facilitate sleep",
       x = "Physical Activity",
       y = "Sleep Duration (hours)")

plot3
plot4
plot5
plot6
```

**Sleep Quality Based on Physical Activity**:

There appears to be a favorable relationship between physical exercise (in minutes) and sleep quality. The sleep quality score improves with increased physical activity. The shaded region reflects the confidence interval, which indicates some uncertainty around the trend line but overall suggests that more physical activity is connected with higher sleep quality.\

**Sleep Duration and Age**:

The graph shows a positive link between age and sleep length (in hours). Sleep duration rises with age, suggesting that older people sleep more rather than less. However, the distribution of data points indicates that there is significant variability and that other factors may possibly play a role.\

**Sleep Duration and Heart Rate**:

This graph indicates a negative association between heart rate and sleep duration. It suggests that a greater resting heart rate leads to shorter sleep lengths. The trend line falls as the heart rate rises, corroborating this theory.\

**Sleep Duration and Physical Activity**:

This plot demonstrates a beneficial relationship between physical activity and sleep length. As physical activity increases, so does sleep length, supporting the title's claim that physical exercise can help you sleep longer.\


```{r}
# Scatter plot of Stress Level based on Physical Activity

plot11 <- ggplot(data, aes(x = Physical.Activity.Level , y = Stress.Level)) +
  geom_point() +
  geom_smooth(method = lm, se = TRUE) +
  labs(title = "Physical Activity Level based on Stress Level",
       x = "Physical Activity Level",
       y = "Stress Level")

plot11
```



## Machine Learning

**Linear Regression**
```{r}
# Response and predictor variables
y <- data$Quality.of.Sleep
X <- data %>% select(Sleep.Duration, Age, Physical.Activity.Level, Stress.Level, Heart.Rate, Daily.Steps)

# Add a constant column for the intercept
X <- cbind(Intercept = 1, X)

# Split the data into training and testing sets (70% train, 30% test)
set.seed(42)  # For reproducibility
split <- sample.split(y, SplitRatio = 0.7)
X_train <- subset(X, split == TRUE)
X_test <- subset(X, split == FALSE)
y_train <- subset(y, split == TRUE)
y_test <- subset(y, split == FALSE)

# Fit the OLS model to the training data
model <- lm(y_train ~ ., data = as.data.frame(X_train))
summary(model)
```
**Interpretation of Model Summary**:

Output indicates that the predictors Sleep Duration, Age, Stress Level, Heart Rate, and Daily Steps are significant, while Physical Activity Level is not. The model's high R-squared (0.9152) and Adjusted R-squared (0.9133) values indicate a strong fit. \

```{r}
# Remove Physical Activity Level from the predictors

X <- data %>% select(Age, Sleep.Duration, Stress.Level, Heart.Rate, Daily.Steps)
X <- cbind(Intercept = 1, X)

# Split the data into training and testing sets (70% train, 30% test)
set.seed(42)  # For reproducibility
split <- sample.split(y, SplitRatio = 0.7)
X_train <- subset(X, split == TRUE)
X_test <- subset(X, split == FALSE)
y_train <- subset(y, split == TRUE)
y_test <- subset(y, split == FALSE)

# Fit the new OLS model to the training data
model_refined <- lm(y_train ~ ., data = as.data.frame(X_train))
summary(model_refined)

```
```{r}
# Define MAE function
mae <- function(y, pred) {
  return(round(mean(abs(y - pred)), 2))
}

# Predictions on training data with refined model
pred_train_refined <- predict(model_refined, newdata = as.data.frame(X_train))

# MAE for training data with refined model
naive_mae_train <- mae(y_train, mean(y_train))
model_mae_train_refined <- mae(y_train, pred_train_refined)

print(paste('Naïve Training MAE:', naive_mae_train))
print(paste('Training MAE with refined model:', model_mae_train_refined))

# Plotting distribution of errors for refined model
ggplot(data.frame(error = y_train - pred_train_refined), aes(x = error)) +
  geom_histogram(binwidth = 0.1, fill = 'blue', color = 'black') +
  ggtitle("Distribution of errors (train) with refined model")

ggplot(data.frame(abs_error = abs(y_train - pred_train_refined)), aes(x = abs_error)) +
  geom_histogram(binwidth = 0.1, fill = 'blue', color = 'black') +
  ggtitle("Distribution of absolute errors (train) with refined model")

# Predictions on test data with refined model
pred_test_refined <- predict(model_refined, newdata = as.data.frame(X_test))

# MAE for test data with refined model
naive_mae_test <- mae(y_test, mean(y_test))
model_mae_test_refined <- mae(y_test, pred_test_refined)

print(paste('Naïve Testing MAE:', naive_mae_test))
print(paste('Testing MAE with refined model:', model_mae_test_refined))

# Plotting distribution of errors for refined model
ggplot(data.frame(error = y_test - pred_test_refined), aes(x = error)) +
  geom_histogram(binwidth = 0.1, fill = 'blue', color = 'black') +
  ggtitle("Distribution of errors (test) with refined model")

ggplot(data.frame(abs_error = abs(y_test - pred_test_refined)), aes(x = abs_error)) +
  geom_histogram(binwidth = 0.1, fill = 'blue', color = 'black') +
  ggtitle("Distribution of absolute errors (test) with refined model")

```
**Improved Model **:

By removing an insignificant predictor (Physical.Activity.Level), multicollinearity issues are likely reduced, resulting in more reliable estimates of the coefficients.
The refined model maintains a high R-squared (0.9152) and Adjusted R-squared (0.9136), indicating that the model still explains a significant portion of the variance in the response variable.
The F-statistic is very high and significant, suggesting that the overall model is a good fit.\

**Mean Absolute Error **:

The Training MAE for the refined model (0.27) is much lower than the Naïve Training MAE (1.05), indicating that the model fits the training data well.
The Testing MAE for the refined model (0.31) is also lower than the Naïve Testing MAE (1.03), showing good predictive performance on the test data.
The similarity between Training MAE (0.27) and Testing MAE (0.31) suggests that the model does not overfit the training data and generalizes well to unseen data.
.\

**Gradient Boosting Machine**
In this part of the project, we implemented a Gradient Boosting Machine (GBM) model to predict the quality of sleep based on various factors such as sleep duration, age, physical activity level, stress level, heart rate, and daily steps. We began by defining a grid of hyperparameters to tune the model, including the number of trees, interaction depth, shrinkage (learning rate), and minimum observations in the terminal nodes. We set up a 5-fold cross-validation to robustly evaluate the model's performance and prevent overfitting. The data was split into training (70%) and testing (30%) sets, and the GBM model was trained using the defined hyperparameters and cross-validation settings.


```{r}
# Splitting the data into training (70%) and testing (30%) sets

set.seed(455) 
trainIndex <- createDataPartition(data$`Quality.of.Sleep`, p = 0.7, list = FALSE)
trainData <- data[trainIndex, ]
testData <- data[-trainIndex, ]

```


```{r}

# Hyperparameters of grid search
grid <- expand.grid(
  n.trees = c(25, 50, 100, 150),       
  interaction.depth = c(1, 2),     
  shrinkage = c(0.05, 0.1, 0.15),  
  n.minobsinnode = c(5, 10)
)


# Setting up the training control with 5-fold cross-validation
train_control <- trainControl(method = "cv", number = 5)
```


```{r}
# Training the model using the grid search
set.seed(455) # For reproducibility
gbm_tuned <- train(
  `Quality.of.Sleep` ~ `Sleep.Duration` + Age + `Physical.Activity.Level` + `Stress.Level` + `Heart.Rate` + `Daily.Steps`,
  data = trainData,
  method = "gbm",
  trControl = train_control,
  tuneGrid = grid,
  verbose = FALSE
)

```


```{r}
# Predictions on training data with gbm_tuned model
pred_train_gbm_tuned <- predict(gbm_tuned, newdata = trainData)

mae <- function(y, pred) {
  return(round(mean(abs(y - pred)), 2))
}

# MAE for training data with gbm_tuned model
naive_mae_train <- mae(trainData$`Quality.of.Sleep`, mean(trainData$`Quality.of.Sleep`))
model_mae_train_gbm_tuned <- mae(trainData$`Quality.of.Sleep`, pred_train_gbm_tuned)

print(paste('Naive Training MAE:', naive_mae_train))
print(paste('Training MAE with gbm_tuned model:', model_mae_train_gbm_tuned))

# Plotting distribution of errors for gbm_tuned model on training data
ggplot(data.frame(error = trainData$`Quality.of.Sleep` - pred_train_gbm_tuned), aes(x = error)) +
  geom_histogram(binwidth = 0.1, fill = 'blue', color = 'black') +
  ggtitle("Distribution of errors (train) with gbm_tuned model")

ggplot(data.frame(abs_error = abs(trainData$`Quality.of.Sleep` - pred_train_gbm_tuned)), aes(x = abs_error)) +
  geom_histogram(binwidth = 0.1, fill = 'blue', color = 'black') +
  ggtitle("Distribution of absolute errors (train) with gbm_tuned model")

# Predictions on test data with gbm_tuned model
pred_test_gbm_tuned <- predict(gbm_tuned, newdata = testData)

# MAE for test data with gbm_tuned model
naive_mae_test <- mae(testData$`Quality.of.Sleep`, mean(testData$`Quality.of.Sleep`))
model_mae_test_gbm_tuned <- mae(testData$`Quality.of.Sleep`, pred_test_gbm_tuned)

print(paste('Naive Testing MAE:', naive_mae_test))
print(paste('Testing MAE with gbm_tuned model:', model_mae_test_gbm_tuned))

# Plotting distribution of errors for gbm_tuned model on test data
ggplot(data.frame(error = testData$`Quality.of.Sleep` - pred_test_gbm_tuned), aes(x = error)) +
  geom_histogram(binwidth = 0.1, fill = 'blue', color = 'black') +
  ggtitle("Distribution of errors (test) with gbm_tuned model")

ggplot(data.frame(abs_error = abs(testData$`Quality.of.Sleep` - pred_test_gbm_tuned)), aes(x = abs_error)) +
  geom_histogram(binwidth = 0.1, fill = 'blue', color = 'black') +
  ggtitle("Distribution of absolute errors (test) with gbm_tuned model")
```

**Summary of Gradient Boosting Machine**
The naive MAE represents the error when predicting the mean value of the quality of sleep for all instances, serving as a baseline for comparison. The substantial reduction in MAE from the naive model (1.08) to the tuned GBM model (0.11) on the testing set indicates a significant improvement in predictive accuracy. Similarly, the training MAE for the GBM model (0.08) is much lower than the naive training MAE (1.03), demonstrating that the model effectively learned the patterns in the training data. These results suggest that the GBM model is well-tuned and capable of making accurate predictions, with minimal error, on both the training and testing datasets.

```{r}
trainData
```

```{r}

trainData$Quality.of.Sleep <- as.numeric(trainData$Quality.of.Sleep)
testData$Quality.of.Sleep <- as.numeric(testData$Quality.of.Sleep)


trainData <- trainData %>% select_if(is.numeric)
testData <- trainData %>% select_if(is.numeric)

normalize <- function(x) {
  return ((x - min(x)) / (max(x) - min(x)))
}

normalized_Age <- as.data.frame(normalize(trainData$Age))
colnames(normalized_Age) <- "Age"

normalized_Sleep_Duration <- as.data.frame(normalize(trainData$Sleep.Duration))
colnames(normalized_Sleep_Duration) <- "Sleep.Duration"

normalized_Stress_Level <- as.data.frame(normalize(trainData$Stress.Level))
colnames(normalized_Stress_Level) <- "Stress.Level"

normalized_Heart_Rate <- as.data.frame(normalize(trainData$Heart.Rate))
colnames(normalized_Heart_Rate) <- "Heart.Rate"

normalized_Daily_Steps <- as.data.frame(normalize(trainData$Daily.Steps))
colnames(normalized_Daily_Steps) <- "Daily.Steps"



trainData <- data.frame(
  Age = normalized_Age,
  Sleep.Duration = normalized_Sleep_Duration,
  Stress.Level = normalized_Stress_Level,
  Heart.Rate = normalized_Heart_Rate,
  Daily.Steps = normalized_Daily_Steps,
  Quality.of.Sleep = trainData$Quality.of.Sleep
)


normalized_Age <- as.data.frame(normalize(testData$Age))
colnames(normalized_Age) <- "Age"

normalized_Sleep_Duration <- as.data.frame(normalize(testData$Sleep.Duration))
colnames(normalized_Sleep_Duration) <- "Sleep.Duration"

normalized_Stress_Level <- as.data.frame(normalize(testData$Stress.Level))
colnames(normalized_Stress_Level) <- "Stress.Level"

normalized_Heart_Rate <- as.data.frame(normalize(testData$Heart.Rate))
colnames(normalized_Heart_Rate) <- "Heart.Rate"

normalized_Daily_Steps <- as.data.frame(normalize(testData$Daily.Steps))
colnames(normalized_Daily_Steps) <- "Daily.Steps"


testData <- data.frame(
  Age = normalized_Age,
  Sleep.Duration = normalized_Sleep_Duration,
  Stress.Level = normalized_Stress_Level,
  Heart.Rate = normalized_Heart_Rate,
  Daily.Steps = normalized_Daily_Steps,
  Quality.of.Sleep = testData$Quality.of.Sleep
)


nn <- neuralnet(Quality.of.Sleep ~ Age + Sleep.Duration + Stress.Level + Heart.Rate + Daily.Steps,  
                data = trainData, hidden = c(5, 3), learningrate = 0.01, stepmax = 1e6,
                linear.output = TRUE) 

prediction <- predict(nn, testData)

mae_value <- mae(testData$Quality.of.Sleep, prediction)
print(mae_value)

#print(predictions)
plot(nn)
```



## References

-   https://www.psychiatry.org/patients-families/sleep-disorders/what-are-sleep-disorders#:\~:text=Sleep%20disorders%20(or%20sleep%2Dwake,distress%20and%20impairment%20in%20functioning.

-   https://www.mayoclinic.org/diseases-conditions/insomnia/symptoms-causes/syc-20355167#:\~:text=Insomnia%20is%20a%20common%20sleep,level%20and%20affect%20your%20mood.

-   https://my.clevelandclinic.org/health/diseases/8718-sleep-apnea

-   https://www.kaggle.com/code/alessandrogiacometti/sleep-health-analysis-how-to-sleep-better

-   https://www.salute.gov.it/portale/alleanzaCardioCerebrovascolari/dettaglioSchedeAlleanzaCardioCerebrovascolari.jsp?lingua=italiano&id=18&area=Alleanza%20italiana%20per%20le%20malattie%20cardio-cerebrovascolari&menu=malattie#:\~:text=Quando%20i%20valori%20pressori%20di,si%20parla%20di%20ipertensione%20arteriosa.

## 
