---
title: "Sleep Disorder"
format: html
---

## Sleep Health and Lifestyle Analysis Project

By:

1.  Amabel Nabila (455854)

    -   Data Visualization and Analysis

2.  Mustafa Ceyhun Vural (455158)

    -   Machine Learning

3.  Onur Durmus (455860)

    -   Machine Learning

4.  Zehra Usta (455847)

    -   Machine Learning, Data Visualization, and Analysis

## Project Objective

This project serves as the final assignment for the Reproducible Research course. It utilizes a dataset sourced from Kaggle and involves translating the code from Python to R. The aim of this project is to analyze the sleep health of individuals based on their respective lifestyles, incorporating machine learning techniques to enhance the analysis. Variables in this project include:

-   Gender

-   Age

-   Occupation

-   Sleep Duration

-   Quality of Sleep

-   Physical Activity Level

-   Stress Level

-   BMI Category

-   Blood Pressure

-   Heart Rate

-   Daily Steps

-   Sleep Disorder

In this study, we integrated visualizations from prior Python research into R and presented a more diversified range of machine learning models. Examples include Gradient Boosting Machine, Support Vector Regression, and the Neural Network Model. 

## Introduction

Sleep disorders (or sleep-wake disorders) are difficulties with the quality, timing, and quantity of sleep that cause daily discomfort and impairment in functioning. Sleep-wake disturbances are frequently associated with physical or mental health illnesses such as depression, anxiety, or cognitive difficulties. There are various forms of sleep-wake disorders, with insomnia being the most frequent. Other sleep-wake problems include sleep apnea. Insomnia is a common sleep problem that makes it difficult to get asleep and remain asleep. Meanwhile, sleep apnea is a condition in which you stop breathing while asleep.

## Library

```{r }
library(dplyr)
library(tidyr)
library(ggplot2)
library(patchwork)
library(corrplot)
library(ggExtra)
library(gbm)
library(caret)
library(caTools)
library(stats)
library(GGally)
library(neuralnet)
library(Metrics)
```

```{r}

library("groundhog")

pkgs <- c("dplyr", "tidyr","ggplot2","patchwork","corrplot","ggExtra","gbm","caret","caTools","stats","GGally","neuralnet","Metrics")

groundhog.library(pkgs, date = "2024-04-23")

```


## Data

```{r}
# Read the data

data <- read.csv('Sleep_health_and_lifestyle_dataset.csv')
```

Reading a dataset in R

## Data Cleaning

```{r}
# Drop NA 
data <- na.omit(data)

# Standardize "Normal Weight" and "normal" to "Normal" in "BMI Category"

data <- data %>%
  mutate(BMI.Category = ifelse(BMI.Category %in% c("Normal Weight", "normal"), "Normal", BMI.Category))

# Cleaned data
head(data)
```

Delete NA data, then standardize the BMI category column

```{r}
# Split the Blood.Pressure column into two new columns and convert to numeric

data <- data %>%
  separate(col = Blood.Pressure, into = c("Systolic Pressure", "Diastolic Pressure"), sep = "/", convert = TRUE) %>%
  mutate(`Systolic Pressure` = as.numeric(`Systolic Pressure`),
         `Diastolic Pressure` = as.numeric(`Diastolic Pressure`))

str(data)
```
```{r}

summary(data)

```

Splitting the Blood.Pressure Column and Converting to Numeric and viewing Summary Data Statistics

```{r}
# Function for categorizing blood pressure

categorize_blood_pressure <- function(systolic, diastolic) {
  if (is.na(systolic) | is.na(diastolic)) {
    return(NA)
  } else if (systolic < 120 & diastolic < 80) {
    return('Optimal')
  } else if (systolic <= 139 | diastolic <= 89) {
    return('Normal')
  } else if (systolic >= 140 | diastolic >= 90) {
    return('Hypertension')
  } else {
    return('Other')
  }
}


data <- data %>%
  rowwise() %>%
  mutate(`Blood.Pressure.Category` = categorize_blood_pressure(`Systolic Pressure`, `Diastolic Pressure`))

head(data)
```

Defining Functions. According to the Italian Ministry of Health, Blood Pressure values ​​can be classified based on 'Systolic' and 'Diastolic' values. Based on previous research, we can identify three possible categories above.

## Data Visualization

```{r}
age_groups <- data %>%
  mutate(Age.Group = case_when(
    Age <= 35 ~ "35 and below",
    Age > 35 ~ "35 and above"
  ))

ggplot(age_groups, aes(x = Age.Group, y = Sleep.Duration, fill = Age.Group)) +
  geom_bar(stat = "summary", fun = "mean") +
  labs(title = "Mean Sleep Duration by Age Group", x = "Age Group", y = "Mean Sleep Duration (hours)") +
  theme_minimal()

ggplot(age_groups, aes(x = Age.Group, y = Quality.of.Sleep, fill = Age.Group)) +
  geom_bar(stat = "summary", fun = "mean") +
  labs(title = "Mean Quality of Sleep by Age Group", x = "Age Group", y = "Mean Quality of Sleep") +
  theme_minimal()

ggplot(age_groups, aes(x = Age.Group, y = Physical.Activity.Level, fill = Age.Group)) +
  geom_bar(stat = "summary", fun = "mean") +
  labs(title = "Mean Physical Activity Level by Age Group", x = "Age Group", y = "Mean Physical Activity Level") +
  theme_minimal()

ggplot(age_groups, aes(x = Age.Group, y = Stress.Level, fill = Age.Group)) +
  geom_bar(stat = "summary", fun = "mean") +
  labs(title = "Mean Stress Level by Age Group", x = "Age Group", y = "Mean Stress Level") +
  theme_minimal()


```

Categorizing age into two groups, over 35 and under 35. On average, those over 35 have higher sleep duration, sleep quality and physical activity. However, those under 35 years of age have higher levels of stress than those over 35 years of age.

```{r}
ggplot(data, aes(x = Stress.Level)) +
  geom_density(fill = "lightblue", alpha = 0.5) +
  labs(title = "Density Plot of Stress.Level", x = "Stress Level", y = "Density") +
  theme_minimal()

ggplot(data, aes(x = Physical.Activity.Level)) +
  geom_density(fill = "lightblue", alpha = 0.5) +
  labs(title = "Density Plot of Physical.Activity.Leve", x = "Physical.Activity.Leve", y = "Density") +
  theme_minimal()

ggplot(data, aes(x = Sleep.Duration)) +
  geom_density(fill = "lightblue", alpha = 0.5) +
  labs(title = "Density Plot of Sleep.Duration", x = "Sleep.Duration", y = "Density") +
  theme_minimal()

```

The stress level has a different distribution in each plot. In the first plot, the stress level is 4 and the other is around stress level 6. In the second, the plot tends to fluctuate. Meanwhile, in the third plot, the levels tend to be close, namely around stress levels 6 and 7.

```{r}
#Chat GPT is used for this section. 

mean_sleep <- mean(data$Quality.of.Sleep, na.rm = TRUE)
median_sleep <- median(data$Quality.of.Sleep, na.rm = TRUE)
mode_sleep <- as.numeric(names(sort(table(data$Quality.of.Sleep), decreasing = TRUE)[1]))

# Histogram 

quality_of_sleep_plot <- ggplot(data, aes(x = Quality.of.Sleep)) +
  geom_histogram(aes(y = ..count..), binwidth = 1, fill = "lightblue", color = "black") +
  geom_vline(aes(xintercept = mean_sleep, color = "Mean"), linetype = "dashed", linewidth = 1) +
  geom_vline(aes(xintercept = median_sleep, color = "Median"), linetype = "dotted", linewidth = 1) +
  geom_vline(aes(xintercept = mode_sleep, color = "Mode"), linetype = "dotdash", linewidth = 1) +
  scale_color_manual(name = "Statistics", values = c("Mean" = "red", "Median" = "green", "Mode" = "blue")) +
  labs(title = "Quality of Sleep Distribution", x = "Quality of Sleep", y = "Count") +
  theme_minimal() +
  theme(
    legend.position = "right",
    plot.title = element_text(hjust = 0.5),
    axis.title.x = element_text(vjust = -0.2),
    axis.title.y = element_text(vjust = 1.2)
  )

print(quality_of_sleep_plot)
```

The majority of participants reported excellent quality of sleep (average scores of 7 and 8). The fact that the mode is higher than both the mean and the median indicates that, while some people may have poor sleep quality, this group is more likely to have good sleep.\

```{r}
#Chat GPT is used for this section. 

# Column names
quality_of_sleep_col <- "Quality.of.Sleep"
grouping_cols <- c("Gender", "Occupation", "BMI.Category", "Blood.Pressure.Category", "Sleep.Disorder")

plots <- list()


for(grouping_col in grouping_cols) {
  # Check if each group has at least two data points
  valid_groups <- data %>%
    group_by(!!sym(grouping_col)) %>%
    filter(n() > 1) %>%
    pull(!!sym(grouping_col)) %>%
    unique()
  
  # Create the density plot only for valid groups
  if (length(valid_groups) > 0) {
    p <- ggplot(data %>% filter(!!sym(grouping_col) %in% valid_groups), 
                aes_string(x = quality_of_sleep_col, fill = grouping_col)) +
      geom_density(alpha = 0.7) +
      theme_minimal() +
      labs(title = paste("Quality of Sleep by", grouping_col))
    plots[[grouping_col]] <- p
  } else {
    warning(paste("Not enough data to plot", grouping_col))
  }
}

# Check your list of plots
plots

# To display the plots
if (length(plots) > 0) {
  library(gridExtra)
  do.call(grid.arrange, c(plots, ncol = 2))
}
```

The investigation reveals that there are distinct patterns and variances in sleep quality based on gender, employment, BMI, blood pressure, and the prevalence of sleeping disorders. Lifestyle and health circumstances appear to have a substantial impact on sleep quality.\

```{r}
# Boxplot for Age by Gender
age_plot <- ggplot(data, aes(x = Gender, y = Age, fill = Gender)) +
  geom_boxplot() +
  labs(title = "1. How old are they?", y = "Age", x = "Gender") +
  theme_minimal()

# Boxplot for Sleep Duration by Gender
sleep_duration_plot <- ggplot(data, aes(x = Gender, y = `Sleep.Duration`, fill = Gender)) +
  geom_boxplot() +
  labs(title = "2. How long do they sleep?", y = "Sleep.Duration", x = "Gender") +
  theme_minimal()

# Boxplot for Quality of Sleep by Gender
quality_sleep_plot <- ggplot(data, aes(x = Gender, y = `Quality.of.Sleep`, fill = Gender)) +
  geom_boxplot() +
  labs(title = "3. How well do they sleep?", y = "Quality of Sleep", x = "Gender") +
  theme_minimal()

library(gridExtra)
grid.arrange(age_plot, sleep_duration_plot, quality_sleep_plot, ncol = 3)
```

**Age:**

The box ages graph show the average age of older women; comparable ranges exist for the top and bottom of the box which shows the interquartile range (box height, IQR) to be similar in both sexes as to variability in age. However, outside the core age groups there are both younger and older men and women according to the whiskers which represent the spread of rest of the data. Nonetheless, the range is larger for women showing that they are of higher age.

**Sleep Duration:**

According to the boxplot, women have longer medians and shorter sleep durations than men. Women are said to spend the same portion of time between quartiles as men hence have similar durations for sleep. With the slightly larger spread in men’s sleep hours, it is likely that men have a much wider spread in sleep duration than women.

**Quality of Sleep:**

Based on the median line, women seem to have a median sleep quality higher than that of men. However, for both genders, it should be noted that the range of values (IQR) was the same. As opposed to men, the general range of sleep tends to be higher among women, implying that they experience more variation in their sleep quality, with some having quite good sleeps while others being in bad ones.

```{r}
# Count the number of participants in each occupation
occupation_count <- data %>%
  group_by(Occupation) %>%
  summarise(Participants = n_distinct(Person.ID))

# Calculate the average quality of sleep for each occupation
avg_quality_of_sleep <- data %>%
  group_by(Occupation) %>%
  summarise(AvgQualityOfSleep = mean(Quality.of.Sleep, na.rm = TRUE))

# Number of Participants by Occupation
occupation_count_plot <- ggplot(occupation_count, aes(x = reorder(Occupation, -Participants), y = Participants)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  coord_flip() +
  labs(title = "1. What are their occupations?", x = "Number of participants", y = "Occupation") +
  theme_minimal()

# Average Quality of Sleep by Occupation
quality_sleep_plot <- ggplot(avg_quality_of_sleep, aes(x = reorder(Occupation, AvgQualityOfSleep), y = AvgQualityOfSleep)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  coord_flip() +
  labs(title = "2. Who sleeps better, and who worse?", x = "Avg Quality of Sleep", y = "Occupation") +
  theme_minimal()

# Print the plots
print(occupation_count_plot)
print(quality_sleep_plot)
```

**Occupational Distribution**:

The first chart shows us how many participants there are. Nursing is the most common job and it comes before engineering and medicine. Lower ranks are occupied by the least number of people who happen to be managers as well as sales representatives. This might be the actual distribution of people from which participants were chosen or a reflection on how willing certain professions were to take part in the research.

**Average Quality of Sleep by Occupation**:

The second graphic illustrates the average sleep quality of different professions. It shows that engineers seem to have the best average sleep quality in general. They have an average sleep quality of over 6 marks, followed by accountants and attorneys. On the other hand, scientists and sales people reports the lowest average sleep quality, which might due to the kind of work that they do, or work related stress. Despite the critical work that they do, doctors don't seem to obtain a better sleep quality compared to others, because despite constituting the largest portion of the dataset, their average sleep quality doesn't appear at the top.

```{r}
# Count of participants by Sleep Disorder
sleep_disorder_count <- ggplot(data, aes(x = Sleep.Disorder)) +
  geom_bar(fill = "skyblue") +
  labs(title = "1. How many suffer from Sleep Disorders?", x = "Sleep Disorder", y = "Number of Participants") +
  theme_minimal()

# Average Quality of Sleep by Sleep Disorder
avg_sleep_quality_by_disorder <- ggplot(data, aes(x = Sleep.Disorder, y = Quality.of.Sleep)) +
  geom_bar(stat = "summary", fun = "mean", fill = "skyblue") +
  labs(title = "2. Who sleeps better?", x = "Sleep Disorder", y = "Avg Sleep Quality") +
  theme_minimal()

# Sleep quality boxplot by Sleep Disorder
sleep_quality_boxplot <- ggplot(data, aes(x = Sleep.Disorder, y = Quality.of.Sleep)) +
  geom_boxplot(fill = "skyblue") +
  labs(title = "3. Sleep quality boxplot by Sleep Disorders", x = "Sleep.Disorder", y = "Sleep.Quality") +
  theme_minimal()

# Print the plots
print(sleep_disorder_count)
print(avg_sleep_quality_by_disorder)
print(sleep_quality_boxplot)
```

More people have the sleep disorder sleep apnea than insomnia. However, in this plot it can be seen that most of the samples in this data do not have sleep disorders.

```{r}
# Select only the numeric columns from the data
numeric_data <- data[sapply(data, is.numeric)]

# Calculating the correlation matrix
cor_matrix <- cor(numeric_data, use = "complete.obs")

# Create the correlation heatmap
corrplot(cor_matrix, method = "color", type = "upper", 
         tl.col = "black", tl.srt = 45,
         diag = FALSE)  

```

- The right scale shows the scale of correlation coefficients from -1 to 1.

 - A coefficient close to 1 indicates a strong positive correlation, meaning that when one of the variables increases in value, so does the other.
 
 - A coefficient of around -1 means a strong negative correlation: as one variable increases, the other usually decreases in response.

- A coefficient around zero indicates little or no linear association between the variables

Therefore, ‘Age’ and ‘Person.ID’ have a significant negative correlation, which is unusual and might indicate that ‘Person.ID’ is quantitatively related to age. But an ID should not be related to age at all unless it’s arbitrarily assigned by age. ‘Quality of Sleep’ and ‘Physical Activity Level’ have a significant positive correlation, so people who physically exercise more have better sleep quality. ‘Stress Level’ has a moderate positive correlation with both ‘Systolic Pressure’ and ‘Diastolic Pressure’, so more stress might be associated with higher blood pressure. ‘Daily Steps’ has a significant negative correlation with ‘Heart Rate’, so people who take more daily steps may have a lower resting heart rate, which is a marker of good cardiovascular health.  


```{r}
# Scatter plot of Sleep Duration vs Quality of Sleep
plot1 <- ggplot(data, aes(x = Quality.of.Sleep, y = Sleep.Duration)) +
  geom_point() +
  geom_smooth(method = lm, se = TRUE) +
  labs(title = "Long Rest = Good Rest",
       x = "Quality of Sleep",
       y = "Sleep Duration (hours)")

# Scatter plot of Stress Level vs Quality of Sleep
plot2 <- ggplot(data, aes(x = Quality.of.Sleep, y = Stress.Level)) +
  geom_point() +
  geom_smooth(method = lm, se = TRUE) +
  labs(title = "More Stress = Bad Rest",
       x = "Quality of Sleep",
       y = "Stress Level")

plot1
plot2
```

**Long Rest = Good Rest**:

The first plot displays a positive association between the sleep duration and its quality. It claims that those who say that they enjoy better sleep, rest for more minutes. The plot shows a lot of points sitting close together over the line of best fit, especially for increased sleep quality levels, portraying the importance of both as connected issues.


**More Stress = Bad Rest**:

Falling on the quality of sleep as stress levels go up suggests the link between increased stress and decreased sleep quality, as shown by the second figure. The quality of sleep decreases with an increase in stress, highlighting a negative relationship. As such, the trend line slants downwards along the plot while related data points though a bit scattered still affirm this notion in a graphical form.

```{r}
# Scatter plot of Physical Activity Level vs Sleep Quality
plot3 <- ggplot(data, aes(x = Quality.of.Sleep, y = Physical.Activity.Level)) +
  geom_point() +
  geom_smooth(method = lm, se = TRUE) +
  labs(title = "A: Sleep quality based on physical activity",
       x = "Sleep Quality",
       y = "Physical Activity Level (minutes)")

# Scatter plot of Age vs Sleep Duration
plot4 <- ggplot(data, aes(x = Age, y = Sleep.Duration)) +
  geom_point() +
  geom_smooth(method = lm, se = TRUE) +
  labs(title = "B: The older you get, the more you sleep",
       x = "Age",
       y = "Sleep Duration (hours)")

# Scatter plot of Heart Rate vs Sleep Duration
plot5 <- ggplot(data, aes(x = Heart.Rate, y = Sleep.Duration)) +
  geom_point() +
  geom_smooth(method = lm, se = TRUE) +
  labs(title = "C: Quickest Heartbeat, Fewest Sleep",
       x = "Heart Rate",
       y = "Sleep Duration (hours)")

# Scatter plot of Physical Activity vs Sleep Duration
plot6 <- ggplot(data, aes(x = Physical.Activity.Level, y = Sleep.Duration)) +
  geom_point() +
  geom_smooth(method = lm, se = TRUE) +
  labs(title = "D: Engaging in physical exercise can facilitate sleep",
       x = "Physical Activity",
       y = "Sleep Duration (hours)")

plot3
plot4
plot5
plot6
```

**Sleep Quality Based on Physical Activity**:

There is a positive relationship between physical activity, in minutes and sleep quality. That is, as physical activity increases so does the sleep quality score. The shaded area is the confidence interval showing a bit of uncertainty around the trend line but in general more physical activity is associated with higher sleep quality.

**Sleep Duration and Age**:

This plot shows a positive relationship between age and sleep duration, in hours. The sleep duration is increasing with age indicating that older people sleep more rather than less. However the scattering of points shows by how much this can vary, and the extent to which other factors may be involved.

**Sleep Duration and Heart Rate**:

This plot will help to support a negative relationship between heart rate and sleep duration. That is, the higher the heart rate, the shorter the duration of sleeping. Indeed, the trend line shows a decrease as the heart rate increases, thereby justifying this assumption.

**Sleep Duration and Physical Activity**:

This plot indicates that, indeed, there is a positive relationship between sleep duration and physical activity. This means the more an individual is physically active, the longer he or she is going to sleep. This graph therefore supports the argument that exercises help an individual to sleep longer.


```{r}
# Scatter plot of Stress Level based on Physical Activity

plot7 <- ggplot(data, aes(x = Physical.Activity.Level , y = Stress.Level)) +
  geom_point() +
  geom_smooth(method = lm, se = TRUE) +
  labs(title = "Physical Activity Level based on Stress Level",
       x = "Physical Activity Level",
       y = "Stress Level")

plot7
```

This graph shows the relationship between physical activity levels and stress levels. It can be seen that there is no significant relationship between physical activity levels and stress levels, as the trend line is almost flat. This suggests that increasing or decreasing physical activity did not significantly affect stress levels in this dataset.


## Machine Learning

In the previous study, an OLS linear regression model was employed with finalizing result of a Naïve Training MAE of 1.05 as well as a refined model training MAE of 0.27, and a Naïve Testing MAE of 1.03 and also refined model testing MAE OF 0.31. For this study, we will adopt the OLS linear regression approach used in the prior research for comparison purposes and include other models to make our study distinctive. For example, Gradient Boosting Machine, Support Vector Regression, and Neural Network Model. 

**Linear Regression**

```{r}
# Response and predictor variables

y <- data$Quality.of.Sleep
X <- data %>% select(Sleep.Duration, Age, Physical.Activity.Level, Stress.Level, Heart.Rate, Daily.Steps)

# Constant column for the intercept
X <- cbind(Intercept = 1, X)

# Train Test Split
set.seed(42)  # For reproducibility
split <- sample.split(y, SplitRatio = 0.7)
X_train <- subset(X, split == TRUE)
X_test <- subset(X, split == FALSE)
y_train <- subset(y, split == TRUE)
y_test <- subset(y, split == FALSE)

# Fit the OLS model to the training data
model <- lm(y_train ~ ., data = as.data.frame(X_train))
summary(model)
```
**Interpretation of Model Summary**:

Output indicates that the predictors Sleep Duration, Age, Stress Level, Heart Rate, and Daily Steps are significant, while Physical Activity Level is not. The model's high R-squared (0.9152) and Adjusted R-squared (0.9133) values indicate a strong fit. \

```{r}
# Remove Physical Activity Level from the predictors

X <- data %>% select(Age, Sleep.Duration, Stress.Level, Heart.Rate, Daily.Steps)
X <- cbind(Intercept = 1, X)

# Split the data into training and testing sets (70% train, 30% test)
set.seed(42)  # For reproducibility
split <- sample.split(y, SplitRatio = 0.7)
X_train <- subset(X, split == TRUE)
X_test <- subset(X, split == FALSE)
y_train <- subset(y, split == TRUE)
y_test <- subset(y, split == FALSE)

# Fit the new OLS model to the training data
model_refined <- lm(y_train ~ ., data = as.data.frame(X_train))
summary(model_refined)

```
```{r}
# Define MAE function
mae <- function(y, pred) {
  return(round(mean(abs(y - pred)), 2))
}

# Predictions on training data with refined model
pred_train_refined <- predict(model_refined, newdata = as.data.frame(X_train))

# MAE for training data with refined model
naive_mae_train <- mae(y_train, mean(y_train))
model_mae_train_refined <- mae(y_train, pred_train_refined)

print(paste('Naïve Training MAE:', naive_mae_train))
print(paste('Training MAE with refined model:', model_mae_train_refined))

# Plotting distribution of errors for refined model
ggplot(data.frame(error = y_train - pred_train_refined), aes(x = error)) +
  geom_histogram(binwidth = 0.1, fill = 'lightblue', color = 'black') +
  ggtitle("Distribution of errors (train) with refined model")

ggplot(data.frame(abs_error = abs(y_train - pred_train_refined)), aes(x = abs_error)) +
  geom_histogram(binwidth = 0.1, fill = 'lightblue', color = 'black') +
  ggtitle("Distribution of absolute errors (train) with refined model")

# Predictions on test data with refined model
pred_test_refined <- predict(model_refined, newdata = as.data.frame(X_test))

# MAE for test data with refined model
naive_mae_test <- mae(y_test, mean(y_test))
model_mae_test_refined <- mae(y_test, pred_test_refined)

print(paste('Naïve Testing MAE:', naive_mae_test))
print(paste('Testing MAE with refined model:', model_mae_test_refined))

# Plotting distribution of errors for refined model
ggplot(data.frame(error = y_test - pred_test_refined), aes(x = error)) +
  geom_histogram(binwidth = 0.1, fill = 'lightblue', color = 'black') +
  ggtitle("Distribution of errors (test) with refined model")

ggplot(data.frame(abs_error = abs(y_test - pred_test_refined)), aes(x = abs_error)) +
  geom_histogram(binwidth = 0.1, fill = 'lightblue', color = 'black') +
  ggtitle("Distribution of absolute errors (test) with refined model")

```
**Improved Model **:

By removing an insignificant predictor (Physical.Activity.Level), multicollinearity issues are likely reduced, resulting in more reliable estimates of the coefficients.
The refined model maintains a high R-squared (0.9152) and Adjusted R-squared (0.9136), indicating that the model still explains a significant portion of the variance in the response variable.
The F-statistic is very high and significant, suggesting that the overall model is a good fit.\

**Mean Absolute Error **:

The Training MAE for the refined model (0.27) is much lower than the Naïve Training MAE (1.05), indicating that the model fits the training data well.
The Testing MAE for the refined model (0.31) is also lower than the Naïve Testing MAE (1.03), showing good predictive performance on the test data.
The similarity between Training MAE (0.27) and Testing MAE (0.31) suggests that the model does not overfit the training data and generalizes well to unseen data.
.\

**Gradient Boosting Machine**

In this part of the project, we implemented a Gradient Boosting Machine (GBM) model to predict the quality of sleep based on various factors such as sleep duration, age, physical activity level, stress level, heart rate, and daily steps. We began by defining a grid of hyperparameters to tune the model, including the number of trees, interaction depth, shrinkage (learning rate), and minimum observations in the terminal nodes. We set up a 5-fold cross-validation to robustly evaluate the model's performance and prevent overfitting. The data was split into training (70%) and testing (30%) sets, and the GBM model was trained using the defined hyperparameters and cross-validation settings.


```{r}
# Train Test Split

set.seed(455) 
trainIndex <- createDataPartition(data$`Quality.of.Sleep`, p = 0.7, list = FALSE)
trainData <- data[trainIndex, ]
testData <- data[-trainIndex, ]

```


```{r}

# Hyperparameters of grid search

grid <- expand.grid(
  n.trees = c(25, 50, 100, 150),       
  interaction.depth = c(1, 2),     
  shrinkage = c(0.05, 0.1, 0.15),  
  n.minobsinnode = c(5, 10)
)


# Setting up the training control with 5-fold cross-validation

train_control <- trainControl(method = "cv", number = 5)
```


```{r}
# Training the model using the grid search

set.seed(455) # For reproducibility
gbm_tuned <- train(
  `Quality.of.Sleep` ~ `Sleep.Duration` + Age + `Physical.Activity.Level` + `Stress.Level` + `Heart.Rate` + `Daily.Steps`,
  data = trainData,
  method = "gbm",
  trControl = train_control,
  tuneGrid = grid,
  verbose = FALSE
)

```


```{r}
# Predictions on training data with gbm_tuned model
pred_train_gbm_tuned <- predict(gbm_tuned, newdata = trainData)

mae <- function(y, pred) {
  return(round(mean(abs(y - pred)), 2))
}

# Plotting distribution of errors for gbm_tuned model on training data
ggplot(data.frame(error = trainData$`Quality.of.Sleep` - pred_train_gbm_tuned), aes(x = error)) +
  geom_histogram(binwidth = 0.1, fill = 'lightblue', color = 'black') +
  ggtitle("Distribution of errors (train) with gbm_tuned model")

ggplot(data.frame(abs_error = abs(trainData$`Quality.of.Sleep` - pred_train_gbm_tuned)), aes(x = abs_error)) +
  geom_histogram(binwidth = 0.1, fill = 'lightblue', color = 'black') +
  ggtitle("Distribution of absolute errors (train) with gbm_tuned model")

# Predictions on test data with gbm_tuned model
pred_test_gbm_tuned <- predict(gbm_tuned, newdata = testData)

# MAE for test data with gbm_tuned model
naive_mae_test <- mae(testData$`Quality.of.Sleep`, mean(testData$`Quality.of.Sleep`))
model_mae_test_gbm_tuned <- mae(testData$`Quality.of.Sleep`, pred_test_gbm_tuned)

print(paste('Naive Testing MAE:', naive_mae_test))
print(paste('Testing MAE with gbm_tuned model:', model_mae_test_gbm_tuned))

# Plotting distribution of errors for gbm_tuned model on test data
ggplot(data.frame(error = testData$`Quality.of.Sleep` - pred_test_gbm_tuned), aes(x = error)) +
  geom_histogram(binwidth = 0.1, fill = 'lightblue', color = 'black') +
  ggtitle("Distribution of errors (test) with gbm_tuned model")

ggplot(data.frame(abs_error = abs(testData$`Quality.of.Sleep` - pred_test_gbm_tuned)), aes(x = abs_error)) +
  geom_histogram(binwidth = 0.1, fill = 'lightblue', color = 'black') +
  ggtitle("Distribution of absolute errors (test) with gbm_tuned model")
```

**Summary of Gradient Boosting Machine**

The naive MAE represents the error when predicting the mean value of the quality of sleep for all instances, serving as a baseline for comparison. The substantial reduction in MAE from the naive model (1.08) to the tuned GBM model (0.11) on the testing set indicates a significant improvement in predictive accuracy. Similarly, the training MAE for the GBM model (0.08) is much lower than the naive training MAE (1.03), demonstrating that the model effectively learned the patterns in the training data. These results suggest that the GBM model is well-tuned and capable of making accurate predictions, with minimal error, on both the training and testing datasets.

```{r}

trainData$Quality.of.Sleep <- as.numeric(trainData$Quality.of.Sleep)
testData$Quality.of.Sleep <- as.numeric(testData$Quality.of.Sleep)


trainData <- trainData %>% select_if(is.numeric)
testData <- trainData %>% select_if(is.numeric)

normalize <- function(x) {
  return ((x - min(x)) / (max(x) - min(x)))
}

normalized_Age <- as.data.frame(normalize(trainData$Age))
colnames(normalized_Age) <- "Age"

normalized_Sleep_Duration <- as.data.frame(normalize(trainData$Sleep.Duration))
colnames(normalized_Sleep_Duration) <- "Sleep.Duration"

normalized_Stress_Level <- as.data.frame(normalize(trainData$Stress.Level))
colnames(normalized_Stress_Level) <- "Stress.Level"

normalized_Heart_Rate <- as.data.frame(normalize(trainData$Heart.Rate))
colnames(normalized_Heart_Rate) <- "Heart.Rate"

normalized_Daily_Steps <- as.data.frame(normalize(trainData$Daily.Steps))
colnames(normalized_Daily_Steps) <- "Daily.Steps"



trainData <- data.frame(
  Age = normalized_Age,
  Sleep.Duration = normalized_Sleep_Duration,
  Stress.Level = normalized_Stress_Level,
  Heart.Rate = normalized_Heart_Rate,
  Daily.Steps = normalized_Daily_Steps,
  Quality.of.Sleep = trainData$Quality.of.Sleep
)


normalized_Age <- as.data.frame(normalize(testData$Age))
colnames(normalized_Age) <- "Age"

normalized_Sleep_Duration <- as.data.frame(normalize(testData$Sleep.Duration))
colnames(normalized_Sleep_Duration) <- "Sleep.Duration"

normalized_Stress_Level <- as.data.frame(normalize(testData$Stress.Level))
colnames(normalized_Stress_Level) <- "Stress.Level"

normalized_Heart_Rate <- as.data.frame(normalize(testData$Heart.Rate))
colnames(normalized_Heart_Rate) <- "Heart.Rate"

normalized_Daily_Steps <- as.data.frame(normalize(testData$Daily.Steps))
colnames(normalized_Daily_Steps) <- "Daily.Steps"


testData <- data.frame(
  Age = normalized_Age,
  Sleep.Duration = normalized_Sleep_Duration,
  Stress.Level = normalized_Stress_Level,
  Heart.Rate = normalized_Heart_Rate,
  Daily.Steps = normalized_Daily_Steps,
  Quality.of.Sleep = testData$Quality.of.Sleep
)

```

**Support Vector Regression**



```{r}
library(e1071)

trainControl <- trainControl(method = "cv", number = 10)

tuneGrid <- expand.grid(
  C = c(0.1, 1, 10, 100),
  sigma = c(0.01, 0.05, 0.1)
)

svm <- svm(Quality.of.Sleep ~ Age + Sleep.Duration + Stress.Level + Heart.Rate + Daily.Steps, data = trainData,
           method = "svmRadial",
           trControl = trainControl,
           tuneGrid = tuneGrid)

summary(svm)

prediction <- predict(svm, newdata = testData)

mae <- mean(abs(prediction - testData$Quality.of.Sleep))
print(paste("Mean Absolute Error:", mae))


```
Results of SVM model is same with tuned GBM model (0.11). It still shows an improvement compared to linear regression model. The biggest advantage of SVM is it is a very fast model and it makes easier to deal with large datasets. Its also very effective in high dimentional datasets. With the help of parameter C its robust to over fitting. SVM is highly efficient in non-linear relationships. Overall, This model provided us quite good results. MAE (0.11)

**Neural Network Model**

Last Model we used in this project is Neural Networks. We used the "neuralnet" package to train our model. COmpared to previous models neural network model provided us best MAE (0.03). For this project we concluded that neural network outperfom linear regression, GBM and SVM.

```{r}

nn <- neuralnet(Quality.of.Sleep ~ Age + Sleep.Duration + Stress.Level + Heart.Rate + Daily.Steps,  
                data = trainData, hidden = c(5, 3), learningrate = 0.01, stepmax = 1e6,
                linear.output = TRUE) 

prediction <- predict(nn, testData)

mae_value <- mae(testData$Quality.of.Sleep, prediction)
print(mae_value)

plot(nn)
```

```{r}
#for reproducibility

sink(file="session_info.txt")

sessionInfo()

sink()

```



## References

- American Psychiatric Association. (2024, March). What are sleep disorders? Retrieved June 15, 2024, from https://www.psychiatry.org/patients-families/sleep-disorders/what-are-sleep-disorders

- Cleveland Clinic. (2022, November 15). Sleep apnea. Retrieved June 15, 2024, from https://my.clevelandclinic.org/health/diseases/8718-sleep-apnea

- Giacometti, A. (2024, January 16). Sleep health analysis: How to sleep better. Retrieved June 15, 2024, from https://www.kaggle.com/code/alessandrogiacometti/sleep-health-analysis-how-to-sleep-better

- Mayo Clinic. (2022, November 15). Insomnia: Symptoms & causes. Retrieved June 15, 2024, from https://www.mayoclinic.org/diseases-conditions/insomnia/symptoms-causes/syc-20355167

- Ministero della Salute. (2022). Ipertensione arteriosa. Retrieved June 15, 2024, from https://www.salute.gov.it/portale/alleanzaCardioCerebrovascolari/dettaglioSchedeAlleanzaCardioCerebrovascolari.jsp?lingua=italiano&id=18&area=Alleanza%20italiana%20per%20le%20malattie%20cardio-cerebrovascolari&menu=malattie

- OpenAI. (2024). Personal communication via ChatGPT [Personal correspondence]. June 15, 2024.


